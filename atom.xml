<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>w4ctech</title>
  
  <subtitle>w4ctech</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://w4ctech.coding.me/"/>
  <updated>2018-04-18T16:45:02.974Z</updated>
  <id>https://w4ctech.coding.me/</id>
  
  <author>
    <name>w4ctech</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>总结js循环遍历</title>
    <link href="https://w4ctech.coding.me/2018/04/18/js%E5%BE%AA%E7%8E%AF%E9%81%8D%E5%8E%86/"/>
    <id>https://w4ctech.coding.me/2018/04/18/js循环遍历/</id>
    <published>2018-04-17T16:00:00.000Z</published>
    <updated>2018-04-18T16:45:02.974Z</updated>
    
    <content type="html"><![CDATA[<p>1 <code>for</code> 循环<br>语法：<code>for( 初始化; 循环执行条件; 每遍历一个元素后做的事情;){}</code><br><iframe height="300" scrolling="no" title="for循环" src="//codepen.io/w4ctech/embed/zjOVxy/?height=265&theme-id=0&default-tab=js,result&embed-version=2" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 100%;">See the Pen <a href="https://codepen.io/w4ctech/pen/zjOVxy/" target="_blank" rel="noopener">for循环</a> by w4ctech (<a href="https://codepen.io/w4ctech" target="_blank" rel="noopener">@w4ctech</a>) on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>.</iframe><br><code>for</code>循环只能遍历数组, 不能遍历对象.</p><p>2 <code>do while</code> 循环<br>语法：<code>do{...}while(true)</code><br></p><p data-height="265" data-theme-id="0" data-slug-hash="WJeqvZ" data-default-tab="js,result" data-user="w4ctech" data-embed-version="2" data-pen-title="do...while" class="codepen">See the Pen <a href="https://codepen.io/w4ctech/pen/WJeqvZ/" target="_blank" rel="noopener">do...while</a> by w4ctech (<a href="https://codepen.io/w4ctech" target="_blank" rel="noopener">@w4ctech</a>) on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>.</p><script async src="https://static.codepen.io/assets/embed/ei.js"></script><br><code>do while</code> 循环只保留对循环条件的判断，所以需要在循环内部使用<code>break</code>终止循环，如果不使用<code>break</code>终止，则会造成死循环；如果使用<code>continue</code>跳出本次循环，为了保证循环能够自动进入到下一次遍历。需要将<code>i++</code>遍历语句放在<code>while</code>头部。否则进入死循环<br><a href="https://simimg.com/i/lz67N" target="_blank" rel="noopener"><img src="https://s1.ax2x.com/2018/04/18/lz67N.md.png" alt="死循环"></a><p></p><p>3 <code>forEach</code> 循环<br>语法：<code>array.forEach(functtion(item,index){})</code>, <code>item</code>表示值，<code>index</code>表示索引。<br><iframe height="265" scrolling="no" title="forEach循环" src="//codepen.io/w4ctech/embed/BxBgoR/?height=265&theme-id=0&default-tab=js,result&embed-version=2" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 100%;">See the Pen <a href="https://codepen.io/w4ctech/pen/BxBgoR/" target="_blank" rel="noopener">forEach循环</a> by w4ctech (<a href="https://codepen.io/w4ctech" target="_blank" rel="noopener">@w4ctech</a>) on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>.</iframe><br><code>forEach</code>无法在IE中使用；<code>forEach</code>无法使用<code>break</code>，<code>continue</code>跳出循环，使用<code>return</code>时，效果和在<code>for</code>循环中使用<code>continue</code>一致</p><p>4 <code>for in</code> 循环<br>语法 <code>for (var item in array){}</code>, <code>item</code> 可以是数组元素，也可以是对象的属性。<br><iframe height="300" scrolling="no" title="for in 循环 " src="//codepen.io/w4ctech/embed/zjOVve/?height=265&theme-id=0&default-tab=js,result&embed-version=2" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 100%;">See the Pen <a href="https://codepen.io/w4ctech/pen/zjOVve/" target="_blank" rel="noopener">for in 循环 </a> by w4ctech (<a href="https://codepen.io/w4ctech" target="_blank" rel="noopener">@w4ctech</a>) on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>.</iframe></p><p>5 <code>$.each</code> 循环<br>语法 <code>$.each(array|object,function(index,element))</code>,<code>index</code>表示当前索引值，<code>element</code>当前的元素。<br><iframe height="300" scrolling="no" title="$.each循环" src="//codepen.io/w4ctech/embed/KRPjVo/?height=265&theme-id=0&default-tab=js,result&embed-version=2" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 100%;">See the Pen <a href="https://codepen.io/w4ctech/pen/KRPjVo/" target="_blank" rel="noopener">$.each循环</a> by w4ctech (<a href="https://codepen.io/w4ctech" target="_blank" rel="noopener">@w4ctech</a>) on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>.</iframe><br><code>this</code>指向当前属性的值。</p><p>6 <code>$(selecter).each</code> 循环<br>语法：<code>$(select|array|object).each(function(index,element))</code> ，可以遍历数组和对象。<br><iframe height="265" scrolling="no" title="$(selecter).each" src="//codepen.io/w4ctech/embed/pVzXRZ/?height=265&theme-id=0&default-tab=js,result&embed-version=2" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 100%;">See the Pen <a href="https://codepen.io/w4ctech/pen/pVzXRZ/" target="_blank" rel="noopener">$(selecter).each</a> by w4ctech (<a href="https://codepen.io/w4ctech" target="_blank" rel="noopener">@w4ctech</a>) on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>.</iframe><br><code>this</code>表示当前遍历的值。不能调用<code>jQuery</code>方法, 如需调用<code>jquery</code>方法需要用<code>$</code>符号包裹.<code>$(this)</code></p><p>7 <code>map</code> 循环<br>语法：<code>array.map(function())</code><br><code>map()</code>方法返回一个由原数组中的每个元素调用一个指定方法后的返回值组成的新数组。<code>function</code>类型指定的处理函数。<br><iframe height="265" scrolling="no" title="map" src="//codepen.io/w4ctech/embed/jxOmwM/?height=265&theme-id=0&default-tab=js,result&embed-version=2" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 100%;">See the Pen <a href="https://codepen.io/w4ctech/pen/jxOmwM/" target="_blank" rel="noopener">map</a> by w4ctech (<a href="https://codepen.io/w4ctech" target="_blank" rel="noopener">@w4ctech</a>) on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>.</iframe></p><p>原数组被“映射”成对应新数组：<br><iframe height="265" scrolling="no" title="理解map方法" src="//codepen.io/w4ctech/embed/wjvmRy/?height=265&theme-id=0&default-tab=js,result&embed-version=2" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 100%;">See the Pen <a href="https://codepen.io/w4ctech/pen/wjvmRy/" target="_blank" rel="noopener">理解map方法</a> by w4ctech (<a href="https://codepen.io/w4ctech" target="_blank" rel="noopener">@w4ctech</a>) on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>.</iframe></p><p>map获取对象数组中的特定属性值：<br><iframe height="265" scrolling="no" title="map获取对象数组中的特定属性值" src="//codepen.io/w4ctech/embed/LmYmbx/?height=265&theme-id=0&default-tab=js,result&embed-version=2" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 100%;">See the Pen <a href="https://codepen.io/w4ctech/pen/LmYmbx/" target="_blank" rel="noopener">map获取对象数组中的特定属性值</a> by w4ctech (<a href="https://codepen.io/w4ctech" target="_blank" rel="noopener">@w4ctech</a>) on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>.</iframe></p><p>Array.prototype扩展可以让IE6-IE8浏览器也支持map方法：<br><iframe height="265" scrolling="no" title="Array.prototype扩展可以让IE6-IE8浏览器也支持map方法" src="//codepen.io/w4ctech/embed/vjYjZW/?height=265&theme-id=0&default-tab=js,result&embed-version=2" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 100%;">See the Pen <a href="https://codepen.io/w4ctech/pen/vjYjZW/" target="_blank" rel="noopener">Array.prototype扩展可以让IE6-IE8浏览器也支持map方法</a> by w4ctech (<a href="https://codepen.io/w4ctech" target="_blank" rel="noopener">@w4ctech</a>) on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>.</iframe><br><a href="https://juejin.im/post/5a70280d6fb9a01cc026884b" target="_blank" rel="noopener">map()和filter()详解</a></p><p>8 <code>every</code>循环<br>语法：<code>array.every(function(item, index, array))</code> <code>item</code> 当前元素的值，<code>index</code> 当前元素索引值，<code>array</code>  当前元素属于的数组对象<br><iframe height="265" scrolling="no" title="every方法" src="//codepen.io/w4ctech/embed/XqWBJP/?height=265&theme-id=0&default-tab=js,result&embed-version=2" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 100%;">See the Pen <a href="https://codepen.io/w4ctech/pen/XqWBJP/" target="_blank" rel="noopener">every方法</a> by w4ctech (<a href="https://codepen.io/w4ctech" target="_blank" rel="noopener">@w4ctech</a>) on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>.</iframe><br><code>every()</code> 不会对空数组进行检测;<code>every()</code> 不会改变原始数组<br><code>arr.every(callback[, thisArg]) every</code>方法用于检验数组中的每一项是否符合某个条件, 若符合则放回<code>true</code>, 反之则返回<code>false</code>.</p><p><code>arr.every(function(item,index,arr){console.info(item);return true});</code></p><ol><li><code>every</code>遇到<code>return</code>则返回,不再往下执行</li></ol><p><code>arr.every(function(item,index,arr){console.info(item););</code></p><ol start="2"><li>没有<code>return</code>时,只执行一次则默认返回<code>false</code></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1 &lt;code&gt;for&lt;/code&gt; 循环&lt;br&gt;语法：&lt;code&gt;for( 初始化; 循环执行条件; 每遍历一个元素后做的事情;){}&lt;/code&gt;&lt;br&gt;
&lt;iframe height=&quot;300&quot; scrolling=&quot;no&quot; title=&quot;for循环&quot; src=&quot;//
      
    
    </summary>
    
      <category term="web" scheme="https://w4ctech.coding.me/categories/web/"/>
    
    
      <category term="js数组" scheme="https://w4ctech.coding.me/tags/js%E6%95%B0%E7%BB%84/"/>
    
      <category term="js对象" scheme="https://w4ctech.coding.me/tags/js%E5%AF%B9%E8%B1%A1/"/>
    
      <category term="js循环" scheme="https://w4ctech.coding.me/tags/js%E5%BE%AA%E7%8E%AF/"/>
    
  </entry>
  
  <entry>
    <title>Canvas——保存和恢复绘图状态</title>
    <link href="https://w4ctech.coding.me/2018/04/15/canvas-save-restore-drawing-status/"/>
    <id>https://w4ctech.coding.me/2018/04/15/canvas-save-restore-drawing-status/</id>
    <published>2018-04-14T16:00:00.000Z</published>
    <updated>2018-04-15T15:01:58.679Z</updated>
    
    <content type="html"><![CDATA[<h3 id="画布绘图状态"><a href="#画布绘图状态" class="headerlink" title="画布绘图状态"></a>画布绘图状态</h3><p>描述某一时刻2D渲染上下文外观的整套属性，从简单的颜色值到复杂的变换矩阵及其他特性。</p><h3 id="描述画布绘图状态的全部属性"><a href="#描述画布绘图状态的全部属性" class="headerlink" title="描述画布绘图状态的全部属性"></a>描述画布绘图状态的全部属性</h3><p>变换矩阵、裁剪区域、globalAlpha、globalCompositeOperation、strokeStyle、fillStyle、lineWidth、lineCap、lineJoin、miterLimit、shadowOffsetX、shadowOffsetY、shadowBlur、shadowColor、font、textAlign 和 textBaseline.</p><h3 id="保存绘图状态——save"><a href="#保存绘图状态——save" class="headerlink" title="保存绘图状态——save()"></a>保存绘图状态——save()</h3><p>当你保存绘图状态时，2D渲染上下文会保存一个绘图状态栈，它是一组之前保存的状态，其中最近保存的状态位于顶部——就像一张纸。绘图状态的默认栈是空的，调用save方法，就会有一个新状态被添加到这个栈。多次调用save方法，就可以将多个绘图状态逐一保存到栈中，其中最早的状态在底部。（下面的例子调用了save()方法保存了fillStyle = “red”状态。）</p><h3 id="恢复绘图状态——restore"><a href="#恢复绘图状态——restore" class="headerlink" title="恢复绘图状态——restore()"></a>恢复绘图状态——restore()</h3><p>通过调用restore方法，你能够自动取出最后添加到栈中的绘图状态，并将它应用于2D渲染上下文，用所保存的状态覆盖全部现有的样式。（下面的例子在设置了fillStyle = “blue”之后又调用了restore()方法恢复了之前已有的fillStyle = “red”状态。）</p><iframe height="265" scrolling="no" title="保存和恢复多个绘图状态" src="//codepen.io/w4ctech/embed/zWVmYJ/?height=265&theme-id=0&default-tab=html,result&embed-version=2" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 100%;">See the Pen <a href="https://codepen.io/w4ctech/pen/zWVmYJ/" target="_blank" rel="noopener">保存和恢复多个绘图状态</a> by w4ctech (<a href="https://codepen.io/w4ctech" target="_blank" rel="noopener">@w4ctech</a>) on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>.</iframe><h3 id="保存和恢复多个绘图状态"><a href="#保存和恢复多个绘图状态" class="headerlink" title="保存和恢复多个绘图状态"></a>保存和恢复多个绘图状态</h3><p>理解新增的项（状态）被添加到栈的顶部，并且它们是从栈顶部取回的。即后进先出的机制，最近保存到栈的绘图状态将是后来第一个恢复的状态。（修改前面的例子，在fillStyle = “blue”之后保存绘图状态，然后调用两次restore()方法，依次恢复了blue和red状态。）</p><iframe height="265" scrolling="no" title="保存和恢复多个绘图状态" src="//codepen.io/w4ctech/embed/mxZzPe/?height=265&theme-id=0&default-tab=js,result&embed-version=2" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 100%;">See the Pen <a href="https://codepen.io/w4ctech/pen/mxZzPe/" target="_blank" rel="noopener">保存和恢复多个绘图状态</a> by w4ctech (<a href="https://codepen.io/w4ctech" target="_blank" rel="noopener">@w4ctech</a>) on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>.</iframe>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;画布绘图状态&quot;&gt;&lt;a href=&quot;#画布绘图状态&quot; class=&quot;headerlink&quot; title=&quot;画布绘图状态&quot;&gt;&lt;/a&gt;画布绘图状态&lt;/h3&gt;&lt;p&gt;描述某一时刻2D渲染上下文外观的整套属性，从简单的颜色值到复杂的变换矩阵及其他特性。&lt;/p&gt;
&lt;h3 id=
      
    
    </summary>
    
      <category term="web" scheme="https://w4ctech.coding.me/categories/web/"/>
    
    
      <category term="canvas" scheme="https://w4ctech.coding.me/tags/canvas/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://w4ctech.coding.me/2018/04/15/hello-world/"/>
    <id>https://w4ctech.coding.me/2018/04/15/hello-world/</id>
    <published>2018-04-14T16:00:00.000Z</published>
    <updated>2018-04-18T22:51:17.120Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
      <category term="hello word" scheme="https://w4ctech.coding.me/categories/hello-word/"/>
    
    
      <category term="hello word" scheme="https://w4ctech.coding.me/tags/hello-word/"/>
    
  </entry>
  
</feed>
